import { Sequelize } from 'sequelize-typescript';import { SEQUELIZE_NIMBUS_RATE } from '../../constants';import { NimbusDataBasesModels } from './database.models';import { Logger } from '@nestjs/common';import { ConfigService } from '@nestjs/config';const logger = new Logger('nimbusAffilateDatabaseProviders')export const nimbusRateDatabaseProviders = [{	provide: SEQUELIZE_NIMBUS_RATE,	inject: [ConfigService],	useFactory: async (configService: ConfigService) => {		const sequelize = await new Sequelize(			String(configService.get<string>('DB_NIMBUS_NAME')),			String(configService.get<string>('DB_NIMBUS_USER')),			configService.get<string>('DB_NIMBUS_PASSWORD'),			{				host: configService.get<string>('DB_NIMBUS_HOST'),				port: configService.get<number>('DB_NIMBUS_PORT'),				dialect: 'postgres',				logging: false,		});		sequelize.options.logging = false;		sequelize.addModels(NimbusDataBasesModels);		await sequelize.sync({			// 	alter: false,			// 	force: false		}).catch(err => {			logger.error(`ERROR SYNC, ${err.message}`);		});		return sequelize;	}}];